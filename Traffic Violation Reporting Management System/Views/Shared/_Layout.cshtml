<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Traffic_Violation_Reporting_Management_System</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site-custom.css" asp-append-version="true" />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand fw-bold" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-shield-check me-2"></i>
                    <span class="d-none d-md-inline">Hệ thống Quản lý Vi phạm GT</span>
                    <span class="d-md-none">QLVP-GT</span>
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    @{
                        var role = Context.Session.GetInt32("Role");
                    }
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">
                                <i class="bi bi-house-door me-1"></i>Trang chủ
                            </a>
                        </li>

                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            if (role == 0)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Report" asp-action="ReportHistory">
                                        <i class="bi bi-clipboard-check me-1"></i>Báo cáo của tôi
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Fine" asp-action="FineHistory">
                                        <i class="bi bi-list-check me-1"></i>Lịch sử vé phạt
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Transaction" asp-action="TransactionHistory">
                                        <i class="bi bi-list-check me-1"></i>Lịch sử giao dịch
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="FineResponse" asp-action="FineResponseHistory">
                                        <i class="bi bi-list-check me-1"></i>Lịch sử khiếu nại
                                    </a>
                                </li>
                            }
                            else if (role == 1)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Report" asp-action="ReportList">
                                        <i class="bi bi-list-check me-1"></i>Danh sách báo cáo
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Vehicle" asp-action="VehicleList">
                                        <i class="bi bi-list-check me-1"></i>Danh sách xe
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Fine" asp-action="FineList">
                                        <i class="bi bi-list-check me-1"></i>Danh sách vé phạt
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Transaction" asp-action="TransactionList">
                                        <i class="bi bi-list-check me-1"></i>Danh sách giao dịch
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="FineResponse" asp-action="FineResponseList">
                                        <i class="bi bi-list-check me-1"></i>Danh sách khiếu nại
                                    </a>
                                </li>
                            }
                            else if (role == 2)
                            {
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="User" asp-action="UserList">
                                        <i class="bi bi-list-check me-1"></i>Danh sách người dùng
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Vehicle" asp-action="VehicleList">
                                        <i class="bi bi-list-check me-1"></i>Danh sách xe
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="ViolationBehavior" asp-action="ViolationBehaviorList">
                                        <i class="bi bi-list-check me-1"></i>Danh sách lỗi vi phạm GT
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Transaction" asp-action="TransactionList">
                                        <i class="bi bi-list-check me-1"></i>Danh sách giao dịch
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link text-dark" asp-controller="Dashboard" asp-action="Index">
                                        <i class="bi bi-list-check me-1"></i>Thống kê số liệu
                                    </a>
                                </li>
                            }
                        }
                    </ul>

                    <ul class="navbar-nav">
                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <!-- Nút chuông thông báo -->
                        <li class="nav-item dropdown">
                            <a class="nav-link position-relative" href="#" id="notifDropdown" role="button"
                               data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-bell"></i>
                                <span id="notif-badge"
                                      class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger"
                                      style="font-size:0.6rem; display:none;">0</span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end p-2"
                                aria-labelledby="notifDropdown"
                                style="min-width:300px; max-height:400px; overflow-y:auto;">
                                <li class="fw-bold text-center border-bottom pb-1">Thông báo</li>
                                <li>
                                  <div id="notif-list" class="px-2">
                                    <div class="dropdown-item text-muted text-center">Chưa có thông báo</div>
                                  </div>
                                </li>
                                <li><hr class="dropdown-divider" /></li>
                                <li>
                                    <a class="dropdown-item text-center" asp-controller="Notifications" asp-action="Index">
                                        Xem tất cả
                                    </a>
                                </li>
                            </ul>
                        </li>

                        <!-- Menu người dùng -->
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdown"
                               role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-person-circle me-1"></i>
                                @User.Identity.Name
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                                    <li>
                                        <a class="dropdown-item" asp-controller="Profile" asp-action="Index">
                                            <i class="bi bi-person me-2"></i>Thông tin cá nhân
                                        </a>
                                    </li>


                                <li>
                                    <a class="dropdown-item" href="#">
                                        <i class="bi bi-gear me-2"></i>Cài đặt
                                    </a>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <form asp-controller="Auth" asp-action="Logout" method="post" class="d-inline">
                                        <button type="submit" class="dropdown-item text-danger">
                                            <i class="bi bi-box-arrow-right me-2"></i>Đăng xuất
                                        </button>
                                    </form>
                                </li>
                            </ul>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="Auth" asp-action="Login">
                                <i class="bi bi-box-arrow-in-right me-1"></i>Đăng nhập
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="Auth" asp-action="Register">
                                <i class="bi bi-person-plus me-1"></i>Đăng ký
                            </a>
                        </li>
                    }
                </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - Traffic_Violation_Reporting_Management_System - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
(function () {
  console.log("[notif] boot");

  const badge = document.getElementById("notif-badge");
  const list  = document.getElementById("notif-list");
  const ddBtn = document.getElementById("notifDropdown");

  if (!badge || !list || !ddBtn) return;

  const URL_LIST      = '@Url.Action("Get","Notifications")';
  const URL_COUNT_ALL = '@Url.Action("CountAll","Notifications")';   // ⇦ API trả { total, unread }
  const HUB_URL       = '@Url.Content("~/hubs/notifications")';
  const VIEW_ALL      = '@Url.Action("Index","Notifications")';

  // ====== HÀM CHUNG: set số trên icon (dùng TOTAL) ======
  function setBadge(count, origin = "unknown") {
    const n = Math.max(0, Number(count) || 0);
    const txt = n > 99 ? "99+" : String(n);
    console.log("[notif][setBadge]", { origin, input: count, parsed: n, display: txt });

    // Bạn muốn 0 thì ẩn hay vẫn hiện?
    // Nếu muốn LUÔN hiện cả khi 0: bỏ khối if/else và luôn set display = inline-block.
    if (n > 0) {
      badge.style.display = "inline-block";
      badge.innerText = txt;
      badge.setAttribute("aria-label", `Bạn có ${n} thông báo`);
      console.log("[notif][setBadge] hiển thị badge:", badge.innerText);
    } else {
      badge.style.display = "none";
      badge.innerText = "0";
      badge.removeAttribute("aria-label");
      console.log("[notif][setBadge] ẩn badge (0 thông báo)");
    }
  }

  function setEmpty(msg = "Chưa có thông báo") {
    list.innerHTML = `<div class="dropdown-item text-muted text-center">${msg}</div>`;
  }

  function render(items, append=false) {
    if (!append) list.innerHTML = "";
    if (!Array.isArray(items) || items.length === 0) {
      if (!append) setEmpty();
      return;
    }
    for (const n of items) {
      const title   = n.title ?? n.Title ?? "";
      const message = n.message ?? n.Message ?? "";
      const a = document.createElement("a");
      a.className = "dropdown-item small";
      a.href = VIEW_ALL;
      a.innerHTML = `
        <div class="fw-bold">${title}</div>
        <div class="text-muted" style="font-size:0.8rem">${message}</div>`;
      list.appendChild(a);
    }
  }

  async function fetchJson(url) {
    console.log('[notif][fetch] -->', url);
    try {
      const res = await fetch(url, { credentials: 'same-origin' });
      const text = await res.text();
      console.log('[notif][fetch][response]', { status: res.status, ok: res.ok, textPreview: text.slice(0, 200) });
      let data = null;
      try { data = text ? JSON.parse(text) : null; }
      catch (e) { console.log('[notif][fetch][parse-error]', e && (e.stack || e)); }
      return { ok: res.ok, status: res.status, data, text };
    } catch (err) {
      console.log('[notif][fetch][network-error]', err && (err.stack || err));
      throw err;
    }
  }

  // 🔑 Dùng API count-all để lấy TOTAL & UNREAD (badge = TOTAL)
  async function refreshCounts(origin) {
    try {
      console.log("[notif][refreshCounts] start", origin);
      const rc = await fetchJson(URL_COUNT_ALL);
      const total  = (rc.data && (rc.data.total  ?? rc.data.Total))  ?? 0;
      const unread = (rc.data && (rc.data.unread ?? rc.data.Unread)) ?? 0;

      setBadge(unread, origin || "count-all");

      // (tuỳ chọn) cập nhật tiêu đề trong dropdown
      const header = document.querySelector('ul.dropdown-menu .fw-bold.text-center');
    } catch (e) {
      console.log("[notif][refreshCounts][ERROR]", e);
      setBadge(0, origin || "count-all-error");
    }
  }

  async function loadLatest() {
    // 1) Lấy TOTAL và set badge
    await refreshCounts("loadLatest");

    // 2) Lấy danh sách hiển thị
    try {
      const r = await fetchJson(URL_LIST + "?onlyUnread=false&page=1&pageSize=5");
      if (!r.ok) { setEmpty("Không tải được thông báo (HTTP " + r.status + ")"); return; }
      if (!Array.isArray(r.data)) { setEmpty("Dữ liệu không hợp lệ"); return; }
      render(r.data, false);
    } catch (e) {
      console.log("[notif][list][ERROR]", e);
      setEmpty("Có lỗi khi tải thông báo");
    }
  }

  // Sự kiện dropdown
  ddBtn.addEventListener("show.bs.dropdown", () => { loadLatest(); });

  // Fallback: gọi 1 lần sau 1s
  setTimeout(() => loadLatest(), 1000);

  // SignalR
  const connection = new signalR.HubConnectionBuilder()
      .withUrl(HUB_URL)
      .withAutomaticReconnect()
      .build();

  connection.on("notify", async (payload) => {
    console.log("[notif] SignalR notify:", payload);

    // (tuỳ chọn) thêm item mới vào đầu danh sách
    try {
      const n = payload?.notification ?? payload; // hỗ trợ cả 2 dạng
      const title   = n?.title ?? n?.Title ?? "";
      const message = n?.message ?? n?.Message ?? "";
      if (title || message) {
        const a = document.createElement("a");
        a.className = "dropdown-item small";
        a.href = VIEW_ALL;
        a.innerHTML = `
          <div class="fw-bold">${title}</div>
          <div class="text-muted" style="font-size:0.8rem">${message}</div>`;
        if (list.querySelector(".dropdown-item.text-muted")) list.innerHTML = "";
        list.prepend(a);
      }
   
    } catch (e) {
      console.log("[notif][notify][render-error]", e);
    }

    // Cập nhật badge = TOTAL (ưu tiên counts trong payload nếu có)
    try {
      const counts = payload?.counts;
        if (counts && typeof counts.unread === "number") {
            setBadge(counts.unread, "signalr-payload-unread");
        } else {
            await refreshCounts("signalr");
        }
    } catch (e) {
      console.log("[notif][notify][update-badge-error]", e);
    }
  });

  // (tuỳ chọn) nếu backend có bắn sự kiện riêng chỉ để cập nhật số
  connection.on("notifyCounts", (counts) => {
    try {
      if (counts && typeof counts.total === "number") {
        setBadge(counts.total, "signalr-counts-total");
      }
    } catch (e) {
      console.log("[notif][notifyCounts][ERROR]", e);
    }
  });

  connection.start()
    .then(() => console.log("[notif] SignalR connected:", HUB_URL))
    .catch(err => console.error("[notif] SignalR error:", err));
})();
</script>






@await RenderSectionAsync("Scripts", required: false)

</body>
</html>